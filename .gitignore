# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
*.egg-info/
.installed.cfg
*.egg

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak
venv.bak

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# IDEs
.vscode/
.idea/
*.swp
*.swo

# OS generated files
.DS_Store
Thumbs.db

# Logs
*.log

# Temporary files
*.tmp
*.temp

# Coverage reports
.coverage
coverage.xml
htmlcov/

# Virtual environments
venv/
env/
.venv/
.env/

# IDE specific files
.vscode/
.idea/

# Managed by pipenv
Pipfile
Pipfile.lock

# Managed by poetry
poetry.lock
.poetry/

# Managed by conda
conda-meta/
envs/

# Local development
*.local
.local_settings.py

# Ignore all files in the migrations directory except for the __init__.py file
**/migrations/*
!**/migrations/__init__.py

# Ignore all files in the fixtures directory
**/fixtures/*

# Ignore all files in the media directory
media/

# Ignore all files in the static directory (if not versioned)
static/

# Ignore all files in the node_modules directory (if using Node.js)
node_modules/

# Ignore all files in the __pycache__ directory recursively
**/__pycache__/

# Ignore all .pyc files recursively
**/*.pyc

# Ignore all .pyo files recursively
**/*.pyo

# Ignore all .pyd files recursively
**/*.pyd

# Ignore all .so files recursively
**/*.so

# Ignore all .egg-info directories recursively
**/*.egg-info/

# Ignore all .egg files recursively
**/*.egg

# Ignore all .whl files
**/*.whl

# Ignore all .tar.gz files
**/*.tar.gz

# Ignore all .zip files
**/*.zip

# Ignore all .rar files
**/*.rar

# Ignore all .7z files
**/*.7z

# Ignore all .dmg files
**/*.dmg

# Ignore all .exe files
**/*.exe

# Ignore all .msi files
**/*.msi

# Ignore all .deb files
**/*.deb

# Ignore all .rpm files
**/*.rpm

# Ignore all .pkg files
**/*.pkg

# Ignore all .app files
**/*.app

# Ignore all .jar files
**/*.jar

# Ignore all .war files
**/*.war

# Ignore all .ear files
**/*.ear

# Ignore all .class files
**/*.class

# Ignore all .swp files
**/*.swp

# Ignore all .swo files
**/*.swo

# Ignore all .swn files
**/*.swn

# Ignore all .bak files
**/*.bak

# Ignore all .tmp files
**/*.tmp

# Ignore all .temp files
**/*.temp

# Ignore all .log files
**/*.log

# Ignore all .out files
**/*.out

# Ignore all .pid files
**/*.pid

# Ignore all .lock files
**/*.lock

# Ignore all .cache files
**/*.cache

# Ignore all .history files
**/*.history